/* POSITION que es ? y como usarlo ?
Explica lo importante de saberse la teoria para aplicar esta propiedad POSITION que consiste en la posiscion de los elementos.
Hay algunos conceptos que se deben conocer para entender POSITION

    Flujo de renderizado -> Por norma general los elementos se dibujan de izquierda a derecha y de arriba abajo. El punto 0,0 de los elementos, por norma general, es la esquina superior izquierda.

    Espacio reservado -> Es el espacio que tiene un elemento asignado en el navegador.

    Elemento posicionado -> Esto significa que el elemento tiene la propiedad POSITION con un valor distinto de "static", que es el valor que tiene esta propiedad por defecto.

    Stackin context -> Contexto de apilamiento. Es el orden en el que se apilarán las cajas que se superponen, dentro del mismo contenedor.

    Al posicionar un elemento se habilitan 5 propiedades que podemos utilizar para mover los elementos en los 3 ejes.

      top -> El elemento se moverá desde la parte superior la distancia que le hayamos indicado.

      right -> El elemento se moverá desde la parte derecha la distancia que le hayamos indicado.

      bottom -> El elemento se moverá desde la parte inferior la distancia que le hayamos indicado.

      left -> El elemento se moverá desde la parte izquierda la distancia que le hayamos indicado.

      z-index -> Nos permite mover el elemento en el contexto de apilamiento (eje z)

      NOTA: Si a un elemento le declaramos la propiedad top y/o left, las propiedades bottom y/o right no funcionarán. 

    Los posibles valores que le podemos dar a position son.

      Static -> Es el valor que tiene por defecto un elemento, con este valor el elemento NO ESTÁ POSICIONADO y por lo cual no podremos moverlo

      Relative -> El elemento mantendrá su posición y medidas en el flujo de renderizado y mantendrá su espacio reservado. Si lo movemos lo hará usando su posición en el html como punto de referencia.

      Absolute -> El elemento perderá sus medidas y su espacio reservado. Si lo movemos usará el elemento posicionado contenedor como referencia. Si no tiene ninguno, usará el elemento html de referencia.

      Fixed -> El elemento perderá sus medidas y su espacio reservado.

      Si lo movemos usará el elemento html de referencia, y además se quedará fijo en esa posición aunque hagamos scroll.

      Sticky -> Es una mezcla de position relative y "fixed".

   Nota: Con este tipo de posicionamiento los valores top, left, bottom y right no sirven para mover el elemento, si no para indicarle en qué punto pasará a tener un comportamiento de posicionamiento similar a fixed, hasta llegar a ese punto se comportará como si no tuviera posicionamiento, aunque sí contará como posicionado si necesitáramos colocar otro elemento respecto a él (absolute)

    z-index: Es la propiedad que nos permite ordenar los elementos superpuestos para controlar cual se coloca por delante y cual por detrás. */
    *{
        box-sizing: border-box;
    }
    body{
        margin: 0;
        border: 2px solid crimson;
        background-color: silver;
    }

    .caja {
        width: 200px;
        height: 200px;
        text-align: center;
   
    }
    .contenedor{
        position: relative;
        top: 0px;
        width:400px;
        height:400px;
        background-color: steelblue;
        /* position: relative; */
        margin: 50px 20px 20px 250px; 
    }

    .caja-1{
        background-color: lightcoral;
        position: relative;
        border-radius: 100px;
        left: 100px;
        /* margin: 20px 30px 20px 350px; */
        
        /* position: relative;
        border-radius: 100px;
        bottom: 0;
        left: 0; */
        /* left: 200px;
        top: 200px;s
     */
    }
    .caja-2{
        background-color: blueviolet;
        position: relative;
        top: 400px;
        border-radius: 100px;
        /* margin-left: 350px; */
        /* z-index: -20; */
        /* bottom: 200px;
        left:200px ; */
       
        /* bottom: 0px; */
        /* bottom: 0;s
        right: 0; */
        /* position: relative;
        left: 0;
        bottom: 0; */
    }
    .caja-3{
        background-color: rgb(57, 167, 61);
        
        /* position: relative; */
        /* z-index: -10;
        right: 150px;
        top: -200px; */
    }
    .caja-4{
        background-color: chocolate;
        /* position: relative;
        top: 100px; */
    }